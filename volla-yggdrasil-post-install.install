post_install() {
  # Disable systemd-resolved
    sed -i s/"enable systemd-resolved.service"/"disable systemd-resolved.service"/g /usr/lib/systemd/system-preset/90-systemd.preset
  # Fix GTK in Lomiri
    if [ -e /usr/bin/unity8 ]; then
        install -Dm644 "/opt/halium9-post-install/lomiri/gtk.css" "/etc/skel/.config/gtk-3.0/gtk.css"
    fi
    touch /.writable_image
  # Pull an Android rootfs
    mkdir -p /var/lib/lxc/android/
    cd /var/lib/lxc/android/
    wget https://ci.ubports.com/job/UBportsCommunityPortsJenkinsCI/job/ubports%252Fcommunity-ports%252Fjenkins-ci%252Fgeneric_arm64/job/main/lastSuccessfulBuild/artifact/halium_halium_arm64.tar.xz -O ./halium_halium_arm64.tar.xz
    tar -xf ./halium_halium_arm64.tar.xz system/var/lib/lxc/android/android-rootfs.img --strip-components 5 --overwrite
    rm -f ./halium_halium_arm64.tar.xz
}

post_upgrade() {
  # Set chassis
    hostnamectl set-chassis handset  
  # Pull an Android rootfs
    mkdir -p /var/lib/lxc/android/
    cd /var/lib/lxc/android/
    wget https://ci.ubports.com/job/UBportsCommunityPortsJenkinsCI/job/ubports%252Fcommunity-ports%252Fjenkins-ci%252Fgeneric_arm64/job/main/lastSuccessfulBuild/artifact/halium_halium_arm64.tar.xz -O ./halium_halium_arm64.tar.xz
    tar -xf ./halium_halium_arm64.tar.xz system/var/lib/lxc/android/android-rootfs.img --strip-components 5 --overwrite
    rm -f ./halium_halium_arm64.tar.xz

  # Flash kernel (following script modified from the one used by Droidian)
  # If we should flash the kernel, do it
  if [ -e "/boot/boot.img" ]; then
    echo "Kernel found, flashing"

    if [ -e "/boot/dtbo.img" ]; then
      has_dtbo="yes"
    else
      has_dtbo="no"
    fi

    # No A/B
    target_partition="boot"
    target_dtbo_partition="dtbo"
    target_vbmeta_partition="vbmeta"

    partition=$(find /dev/disk/by-partlabel -name ${target_partition} | head -n 1)
    if [ -n "${partition}" ]; then
      echo "Found boot partition for current slot ${partition}"

      dd if=/boot/boot.img of=${partition} && echo "Kernel flashed"
    fi

    if [ "${has_dtbo}" = "yes" ]; then
      echo "DTBO found, flashing"

      partition=$(find /dev/disk/by-partlabel -name ${target_dtbo_partition} | head -n 1)
      if [ -n "${partition}" ]; then
        echo "Found DTBO partition for current slot ${partition}"

        dd if=/boot/dtbo.img of=${partition} && echo "DTBO flashed"
      fi
    fi

  fi
}
